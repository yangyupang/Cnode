<template>
  <div class="detail">
    <el-card v-if="article">
      <div class="top">
        {{article.title}}
      </div>
      <div class="desc">
        <div class="item">
          <span v-if="article.hours < 24">发布于{{article.hours}}小时前</span>
          <span v-else>发布于 {{article.hours % 24}}天前</span>
        </div>
        <div class="item">
          作者 {{article.author.loginname}}
        </div>
        <div class="item">
          {{article.visit_count}} 次浏览
        </div>
        <div class="item">
          来自 <span v-if="article.tab === 'ask'">问答</span><span v-if="article.tab === 'share'">分享</span>
        </div>
      </div>
    </el-card>
    <el-card v-if="article">
      <div v-html="article.content"></div>
    </el-card>
    <br>
    <el-card class="el__card__header" v-if="article">
      <div slot="header">
        <div class="reply">{{article.reply_count}} 回复</div>
      </div>
      <div v-for="(item, index) in article.replies" :key="item.id">
        <div class="content">
          <div class="c-img">
            <img :src="item.author.avatar_url" alt="">
          </div>
          <div>
            <span>{{index + 1}}楼</span>?
          </div>
          <div>
            <span v-if="item.hours < 24">{{item.hours}}小时前</span>
            <span v-else>{{item.hours % 24}}天前</span>
          </div>
        </div>
        <div class="replyContent" v-if="article.reply_count > 0">
          <div v-html="item.content"></div>
        </div>
        <div class="line"></div>
      </div>
    </el-card>
  </div>

</template>

<script>
  import {Loading} from 'element-ui'
  export default {
    name: "Detail",
    components: {},
    props: {},
    data() {
      return {
        id: '',
        article: null,
        loadingInstance: null
      }
    },
    methods: {
      getData() {
        this.$com.req(`topic/${this.id}`).then(response => {
          let res = response.data
          if (res) {
            this.$nextTick(() => {
              this.loadingInstance.close()
            })
            let date = new Date()
            let d = date.getTime()
            let times = this.$moment(d).valueOf() - this.$moment(res.create_at).valueOf()
            res.hours = (times / 60 / 60 / 1000).toFixed(0)
            res.replies.map(item => {
              let reTime = this.$moment(d).valueOf() - this.$moment(item.create_at).valueOf()
              let reHours = (reTime / 60 / 60 / 1000).toFixed(0)
              item.hours = reHours
            })
              this.article = res
          }
        })
      }
    },
    mounted() {
      this.id = this.$route.query.id
      this.getData()
      this.loadingInstance = Loading.service({
        text: '加载中...'
      })
    },
    created() {

    },
    filters: {},
    computed: {},
    watch: {},
    directives: {}
  }
</script>

<style scoped lang="scss">

  .detail {
    /deep/ img {
      width: 100% !important;
    }
    .top {
      font-size: 22px;
      font-weight: 700;
      margin: 8px 0;
      display: inline-block;
      vertical-align: bottom;
      width: 75%;
      line-height: 130%;
    }

    .desc {
      display: flex;
      align-items: center;

      .item {
        &:before {
          content: "?";
        }
        margin-left: 5px;
        font-size: 12px;
        color: #838383;
      }
    }
    .reply {
      padding: 10px;
      background-color: #f6f6f6;
      border-radius: 3px 3px 0 0;
      color: #444;
    }
    .content {
      display: flex;
      align-items: center;
      .c-img {
        width: 30px;
        height: 30px;
        img {
          width: 100%;
          height: 100%;
        }
      }
      span {
        color: #08c;
        text-decoration: none;
        font-size: 12px;
      }
    }
    .replyContent {
      padding: 20px 0;
    }
    .line {
      height: 1px;
      width: 120%;
      background: #eee;
      position: relative;
      right: 10%;
      margin: 10px 0;
    }
  }
</style>
